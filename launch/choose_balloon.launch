<launch>

  <arg name="uav_name" default="$(optenv UAV_NAME uav)"/>
  <arg name="debug" default="false" />
  <arg name="print_debug" default="true" />

  <arg unless="$(arg debug)" name="launch_prefix" value=""/>
  <arg     if="$(arg debug)" name="launch_prefix" value="debug_roslaunch"/>

  <arg name="standalone" default="true" />
  <arg name="manager" default="balloon_filter" />
  <arg name="nodelet_name" value="balloon_filter/BalloonFilter" />
  <arg unless="$(arg standalone)" name="nodelet_load" value="load $(arg nodelet_name) $(arg manager)"/>
  <arg     if="$(arg standalone)" name="nodelet_load" value="standalone $(arg nodelet_name)"/>

  <group if="$(arg print_debug)">
    <env name="ROSCONSOLE_CONFIG_FILE" value="$(find balloon_filter)/config/rosconsole/debug.conf"/>
  </group>

  <group ns="$(arg uav_name)">

    <node pkg="nodelet" type="nodelet" name="balloon_filter" args="$(arg nodelet_load)" output="screen" launch-prefix="$(arg launch_prefix)" >

      <param name="uav_name" type="string" value="$(arg uav_name)" />
      <param name="uav_frame_id" type="string" value="fcu_$(arg uav_name)" />
      <rosparam file="$(find balloon_filter)/config/filter_params_common.yaml" command="load" />
      <rosparam file="$(find balloon_filter)/config/filter_params_$(arg uav_name).yaml" command="load" />

      <!-- Subscribers -->
      <remap from="~balloon_detections" to="object_detect/detected_objects" />

      <!-- Publishers -->
      <remap from="~balloon_chosen_out" to="~balloon_chosen_out" />

    </node>

  </group>

</launch>
