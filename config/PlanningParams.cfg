#!/usr/bin/env python

PACKAGE='balloon_planner'
import roslib;
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator();

params = gen.add_group("Balloon planner parameters");

params.add("min_balloon_height", double_t, 1, "balloon detection below this height will be discarded", 1.0, 0.0, 10.0);
params.add("filter_coeff", double_t, 1, "coefficient of the balloon position exponential filter", 0.9, 0.0, 1.0);
params.add("gating_distance", double_t, 1, "maximal distance of a detection to be associated to the chosen balloon", 2.0, 0.0, 20.0);
params.add("max_time_since_update", double_t, 1, "after no detection is associated to the chosen balloon, it is forgotten", 2.0, 0.0, 60.0);
params.add("min_updates_to_confirm", int_t, 1, "minimal number of updates to be associated to the chosen balloon for it to be confirmed", 30, 0, 600);
params.add("min_dist_quality", int_t, 1, "minimal quality of the distance estimate to consider a point (0 corresponds to no estimate, 1 is only from blob size, 2 is only from depthmap and 3 is both)", 1, 0, 3);

exit(gen.generate(PACKAGE, "balloon_planner", "PlanningParams"))
